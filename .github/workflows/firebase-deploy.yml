name: Deploy to Firebase

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "What to deploy"
        required: true
        default: "both"
        type: "choice"
        options:
          - both
          - web
          - functions

jobs:
  deploy-functions:
    name: Deploy Firebase Functions
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'both' || github.event.inputs.deploy_target == 'functions'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .firebaserc from GitHub variable
        run: echo '${{ vars.FIREBASERC }}' > .firebaserc

      - name: Install dependencies
        working-directory: ./functions
        run: npm ci

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_DICE_ROLLER }}"
          projectId: ${{ vars.PROJECT_ID }}
          channelId: live

  deploy-web:
    name: Deploy Firebase Hosting
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'both' || github.event.inputs.deploy_target == 'web'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .firebaserc from GitHub variable
        run: echo '${{ vars.FIREBASERC }}' > .firebaserc

      - name: Install dependencies
        working-directory: ./web
        run: npm ci

      - name: Build
        working-directory: ./web
        run: npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_DICE_ROLLER }}"
          projectId: ${{ vars.PROJECT_ID }}
          channelId: live
